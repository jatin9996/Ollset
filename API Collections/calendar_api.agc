{"version":1,"type":"collection","title":"Calendar API","queries":[{"version":1,"type":"window","query":"\n# This API is used to add event to the calendar. Fields like repeat is used to repeat the event based on frequency parameter like daily. Calendar Id is where we are adding events.\nmutation{\n  createAddEvent(addEventRequestModel: {\n    calendarBookingId:0\n    calendarId:33818  \n    allDay:false\n    description: \"This is #Music #Party\",    \n    #latitude:22.9952,\n    #longitude: 72.6041,\n    startTime: \"10-30-2021 08.30 PM\"\n    endTime: \"10-30-2021 09.30 PM\"\n    reminderType: \"email\"\n    title: \"New York Concerts\"\n    #repeat: true    \n    #frequency:\"DAILY\"\n    #categoryIds:\"35359\"\n    tags:\"hello\"\n    eventType:1\n  }){\n    isSuccess\n    reason\n  }\n}","apiUrl":"{{serverURL}}/o/graphql","variables":"{}","subscriptionUrl":"","subscriptionConnectionParams":"{}","headers":[{"key":"Authorization","value":"Bearer a8288518af63bcc5d47d085cb1ae99db3ee6baebcd949c7313c5dc8841b4da2","enabled":true}],"windowName":"Add Or Update Event","preRequestScript":"","preRequestScriptEnabled":false,"id":"62db8972-c28f-40f0-b5d7-b4ba364edf62","updated_at":1635958139228},{"version":1,"type":"window","query":"# This api is used to delete event based on event/booking id.\nmutation{\n  createDeleteEvent(deleteEventRequestModel: {\n    calendarBookingId:36456\n  }){\n    isSuccess\n    reason\n  }\n}","apiUrl":"{{serverURL}}/o/graphql","variables":"{}","subscriptionUrl":"","subscriptionConnectionParams":"{}","headers":[{"key":"Authorization","value":"Bearer ae51742f2cd22a40bd17ce62a1c8d948c8c2d582a7ac3c8e1c2d375377e85dc","enabled":true}],"windowName":"Delete Event","preRequestScript":"","preRequestScriptEnabled":false,"id":"75f820c3-6294-4856-92b2-0e5d1ab4c1ff","updated_at":1635958198488},{"version":1,"type":"window","query":"\n# This API is used to delete entire calendar instance by calendar Id.\nmutation{\n  createDeleteCalendar(deleteCalendarRequestModel: {\n    calendarId:35724\n  }){\n    isSuccess\n    reason\n  }\n}","apiUrl":"{{serverURL}}/o/graphql","variables":"{}","subscriptionUrl":"","subscriptionConnectionParams":"{}","headers":[{"key":"Authorization","value":"","enabled":true}],"windowName":"Delete Calendar","preRequestScript":"","preRequestScriptEnabled":false,"id":"50a48fc6-6e9a-4465-b0b3-94ebf6891627","updated_at":1635958250781},{"version":1,"type":"window","query":"# To upload event background image, This API must be called before adding event.\n\nmutation($file:[Upload]){ \n  createUploadEventBgImage(multipartBody: $file){\n    isSuccess\n    reason\n    fileEntryId\n  }\n}\n","apiUrl":"{{serverURL}}/o/graphql","variables":"{}","subscriptionUrl":"","subscriptionConnectionParams":"{}","headers":[{"key":"Authorization","value":"Bearer cf88f2e779822799b6b042482137b30e62e358570e914715f15d44329f4c7f","enabled":true}],"windowName":"Event BG Image","preRequestScript":"","preRequestScriptEnabled":false,"id":"390ebcba-69f8-4e03-b0a9-79aaa1ac807e","updated_at":1634840721058},{"version":1,"type":"window","query":"# It is use to get the events by calendar Ids. You can provide multiple comma separated calendar Id.\n\nquery{\nevents(calendarBookingRequestModel: {\n   calendarIds: \"33818\" \n  }){\n    items {\n      Id\n      IsAllDay\n      calendarId\n      color\n      title\n      description\n      startTime\n    \tendTime\n      timezone\n      invitedUsers {\n        fullName\n        portraitURL\n        userId\n        username\n      }\n      isRecurring\n      recurrence {\n        frequency\n        interval\n        expirationDate\n      }\n    }\n    page\n    pageSize\n    totalCount\n  }\n}","apiUrl":"{{serverURL}}/o/graphql","variables":"{}","subscriptionUrl":"","subscriptionConnectionParams":"{}","headers":[{"key":"Authorization","value":"Bearer ae51742f2cd22a40bd17ce62a1c8d948c8c2d582a7ac3c8e1c2d375377e85dc","enabled":true}],"windowName":"Get Events","preRequestScript":"","preRequestScriptEnabled":false,"id":"1f68b2c7-b39a-4108-bde7-a28542c4920e","updated_at":1636007833183},{"version":1,"type":"window","query":"# This API is used to get the calendars of user by username or userId\nquery{\n  calendarUser(userId: \"manager\"){\n    items {\n      calendarId\n      defaultCalendar\n      createDate\n      nameCurrentValue\n      color\n      companyId\n      timeZoneId\n    }\n    page\n    pageSize\n    totalCount\n  }\n}","apiUrl":"{{serverURL}}/o/graphql","variables":"{}","subscriptionUrl":"","subscriptionConnectionParams":"{}","headers":[{"key":"Authorization","value":"Bearer a8288518af63bcc5d47d085cb1ae99db3ee6baebcd949c7313c5dc8841b4da2","enabled":true}],"windowName":"Get Calendars by User Id/Username","preRequestScript":"","preRequestScriptEnabled":false,"id":"6ba4183a-3710-445f-8ea0-44b46cda5e32","updated_at":1635958609629},{"version":1,"type":"window","query":"# It is used to create or update calendar.\nmutation{\n  createAddCalendar(addNewCalendarRequestModel: {\n    name: \"Calender 1\",\n    calendarId:0,\n    defaultCalendar: false,\n    description: \"cal 1\",\n    timezoneId: \"UTC\",\n    color: \"#E0C240\",\n    type: 4,\n    invitedUsers: [37826, 37808, 37702],\n    organizationId: \"123\",\n    eventEditable: true  \n  }){\n    isSuccess\n    reason\n  }\n}","apiUrl":"{{serverURL}}/o/graphql","variables":"{}","subscriptionUrl":"","subscriptionConnectionParams":"{}","headers":[{"key":"Authorization","value":"Bearer dc65d1d76315ef8241b8379744918453a211bae19134bb28b8f7ce197bd6c51a","enabled":true}],"windowName":"Add New Calendar","preRequestScript":"","preRequestScriptEnabled":false,"id":"51beae17-abd3-4a8f-b4ac-a81764676398","updated_at":1634840306283},{"version":1,"type":"window","query":"# This API is used to get near by events based on location and user's interest. It is not yet deployed on DEV.\nquery{\n  nearbyEvents(nearByEventsRequestModel: {\n    latitude:\"23.0500\",\n    longitude: \"72.6700\"\n  }){\n    items {\n      Id\n      IsAllDay\n      calendarId\n      color\n      title\n      description\n      startTime\n    \tendTime\n      timezone\n      imageURL\n      invitedUsers {\n        fullName\n        portraitURL\n        userId\n        username\n      }\n      isRecurring\n      recurrence {\n        frequency\n        interval\n        expirationDate\n      }\n      tagModels{\n        name\n        tagId\n      }\n    }\n    page\n    pageSize\n    totalCount\n  }\n}","apiUrl":"{{serverURL}}/o/graphql","variables":"{}","subscriptionUrl":"","subscriptionConnectionParams":"{}","headers":[{"key":"Authorization","value":"Bearer 534621b424b0c27e7154e47b7e63115c28edb65766925084c593d08cbdc678","enabled":true}],"windowName":"Get NearBy Events","preRequestScript":"","preRequestScriptEnabled":false,"id":"a9340eaa-ddd4-4de8-9301-e7e44239b407","updated_at":1636007947386}],"created_at":1634835910966,"updated_at":1636007947386,"id":3}