{"version":3,"sources":["_components/reset-password/reset-password.html.js","_components/reset-password/reset-password.js","_components/reset-password/index.js"],"names":["ResetPasswordHtml","_","state","username","errors","submitted","resetStatus","resetLinkSend","className","Row","Col","xl","lg","md","sm","xs","Card","Title","src","Body","length","Alert","variant","Form","onSubmit","handleSubmit","Group","FloatingLabel","controlId","label","inputChange","Control","size","type","placeholder","Button","onClick","sendResetLink","ResetPasswordComponent","props","authService","AuthenticationService","event","target","id","value","setState","validationErrorMessage","validateForm","valid","Object","entries","forEach","item","a","preventDefault","then","response","data","hasOwnProperty","createSendPasswordResetCode","isSent","initialState","catch","err","console","log","this","Component","connect","profile","user","withRouter"],"mappings":"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","file":"static/js/9.83f326e8.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from 'react-bootstrap/Card';\r\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\nimport './reset-password.css';\r\n\r\nconst ResetPasswordHtml = (_) => {\r\n    //const {  passidErr, emailIdErr, authFail } = _.state.formErrors; \r\n    \r\n    const { username, errors, submitted, resetStatus, resetLinkSend } = _.state;   \r\n    return (\r\n      <div className=\"home\">\r\n        <div className=\"container\">\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col xl=\"5\" lg=\"6\" md=\"7\" sm=\"8\" xs=\"12\">\r\n                {\r\n                    !resetLinkSend ? \r\n                    <Card>\r\n                        \r\n                            <Card.Title>Reset Password</Card.Title>\r\n                            <Card.Body>\r\n                                { submitted && resetStatus.length > 0 &&  <Alert variant=\"danger\">{resetStatus}</Alert>}\r\n                                <Form onSubmit={_.handleSubmit}>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <FloatingLabel\r\n                                            controlId=\"username\"\r\n                                            label=\"Email Or Phone Number\"\r\n                                            className = \"mb-3\"\r\n                                            className = {submitted && errors.username.length > 0 ? 'showError' : ''}\r\n                                            value={username}    \r\n                                            onChange={_.inputChange}    \r\n                                        >\r\n                                            <Form.Control size=\"lg\" type=\"text\" placeholder=\"Email Or Phone Number\"/>\r\n\r\n                                        </FloatingLabel>\r\n                                        { submitted && errors.username.length > 0 &&  <small className='error'>{errors.username}</small>}\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Button size=\"lg\" className=\"form-control\" variant=\"primary\" type=\"submit\" onClick={_.sendResetLink}>Send Reset Link</Button>\r\n                                    </Form.Group>\r\n                            \r\n                                </Form>\r\n                            </Card.Body>\r\n                    </Card>\r\n                    :\r\n                    <Card>\r\n                        <Card.Title className=\"align-center\">\r\n                            <img src=\"/assets/images/green-tick.svg\"/>\r\n                            <br/>\r\n                            <br/>\r\n                            Reset Link Sent\r\n                        </Card.Title>\r\n                        <Card.Body className=\"align-center\">\r\n                            <label>\r\n                                We've sent you a password reset link. Please check your inbox and follow the instructions from there.\r\n                            </label>\r\n                        </Card.Body>\r\n                        \r\n                    </Card>\r\n                }\r\n            </Col>\r\n         \r\n          </Row>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n       \r\n    )\r\n}\r\n\r\nexport default ResetPasswordHtml;","import React, { Component, useState } from 'react';\r\nimport { withRouter} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { AuthenticationActionCreators } from '../../_actions';\r\nimport { getStore, setStore } from '../../_utils';\r\nimport  ResetPasswordHtml  from './reset-password.html';\r\nimport { AuthenticationService } from '../../_services/auth.service';\r\n\r\nexport class ResetPasswordComponent extends Component {\r\n\t\r\n\tauthService = new AuthenticationService();\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\tusername: '',\r\n\t\terrors: {\r\n\t\t\tusername: 'Email is required!'\r\n\t\t},\r\n\t\tresetStatus: '',\r\n\t\tresetLinkSend: false,\r\n\t\tsubmitted: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t}\r\n\tinputChange = (event) => {\r\n\t\tconst { id, value } = event.target;\r\n\t\tthis.setState({ [id]: value });\r\n\t\tthis.validationErrorMessage(event);\r\n\t}\r\n\r\n\tvalidationErrorMessage = (event) => {\r\n\t\tconst { id, value } = event.target;\r\n\t\tlet errors = this.state.errors;\r\n\t\tswitch (id) {\r\n\t\tcase 'username': \r\n\t\t\terrors.username = value.length < 1 ? 'Email is required' : '';\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.setState({ errors });\r\n\t}\r\n\r\n\tvalidateForm = (errors) => {\r\n\t\tlet valid = true;\r\n\t\tObject.entries(errors).forEach(item => {\r\n\t\t\titem && item[1].length > 0 && (valid = false)\r\n\t\t});\r\n\t\treturn valid;\r\n\t}\r\n\r\n\tsendResetLink = async (event) => {\r\n\t\tthis.setState({ submitted: true });\r\n\t\tevent.preventDefault();\r\n\t\tif (this.validateForm(this.state.errors)) {\r\n\t\t\tthis.authService.sendResetLink(this.state.username).then((response) => {\r\n\t\t\t\tif(response.data.hasOwnProperty('createSendPasswordResetCode') && response.data.createSendPasswordResetCode.isSent) {\r\n\t\t\t\t\tthis.setState({ resetLinkSend : true });\r\n\t\t\t\t\tthis.setState(this.initialState);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ resetLinkSend : false });\r\n\t\t\t\t\tthis.setState({ resetStatus: 'Reset link could not be sent to entered email or phone'})\r\n\t\t\t\t}\r\n\t\t\t}).catch((err) => {\r\n\t\t\t\tthis.setState({ resetStatus: 'Reset link could not be sent to entered email or phone'})\r\n\t\t\t});\r\n\t\t\r\n\t\t} else {\r\n\t\t\tconsole.log('Invalid Form')\r\n\t\t}\r\n\t}\r\n\r\n  render() {\r\n\t\r\n    return ResetPasswordHtml(this)\r\n    \r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.user.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(ResetPasswordComponent));\r\n","import ResetPasswordComponent from './reset-password';\r\n\r\nexport default ResetPasswordComponent;"],"sourceRoot":""}