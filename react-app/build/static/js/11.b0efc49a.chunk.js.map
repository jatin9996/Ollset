{"version":3,"sources":["_components/verify-page/verify-page.html.js","_components/verify-page/verify-page.js","_components/verify-page/index.js"],"names":["VerifyPageHtml","_","state","verifycode","errors","submitted","verifyStatus","className","Row","Col","xl","lg","md","sm","xs","Card","Body","Title","length","Alert","variant","Form","onSubmit","handleSubmit","Group","FloatingLabel","controlId","label","inputChange","Control","size","type","placeholder","Button","onClick","registerUser","VerifyPageComponent","props","authService","AuthenticationService","event","target","id","value","setState","validationErrorMessage","validateForm","valid","Object","entries","forEach","item","a","preventDefault","console","info","user","getStore","then","response","data","hasOwnProperty","removeItem","initialState","setTimeout","history","push","catch","err","log","this","getVerificationCode","emailOrPhone","firstName","res","Component","connect","profile","withRouter"],"mappings":"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","file":"static/js/11.b0efc49a.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from 'react-bootstrap/Card';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport './verify-page.css';\r\n\r\nconst VerifyPageHtml = (_) => {\r\n    //const {  passidErr, emailIdErr, authFail } = _.state.formErrors; \r\n    \r\n    const { verifycode, errors, submitted, verifyStatus } = _.state;   \r\n    return (\r\n      <div className=\"home\">\r\n        <div className=\"container\">\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col xl=\"5\" lg=\"6\" md=\"7\" sm=\"8\" xs=\"12\">\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Verify User</Card.Title>\r\n                        <Card.Body>\r\n                            { submitted && verifyStatus.length > 0 &&  <Alert variant=\"info\">{verifyStatus}</Alert>}\r\n                            <Form onSubmit={_.handleSubmit}>\r\n                                <Form.Group>\r\n                                    <FloatingLabel\r\n                                        controlId=\"verifycode\"\r\n                                        label=\"Verification Code\"\r\n                                        className = \"mb-3\"\r\n                                        className = {submitted && errors.verifycode.length > 0 ? 'showError' : ''}\r\n                                        value={verifycode}    \r\n                                        onChange={_.inputChange}    \r\n                                    >\r\n                                        <Form.Control size=\"lg\" type=\"text\" placeholder=\"Verification Code\" />\r\n\r\n                                    </FloatingLabel>\r\n                                    { submitted && errors.verifycode.length > 0 &&  <small className='error'>{errors.verifycode}</small>}\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button size=\"lg\" className=\"form-control\" variant=\"primary\" type=\"submit\" onClick={_.registerUser}>Verify</Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n         \r\n          </Row>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n       \r\n    )\r\n}\r\n\r\nexport default VerifyPageHtml;","import React, { Component, useState } from 'react';\r\nimport { withRouter} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { AuthenticationActionCreators } from '../../_actions';\r\nimport  VerifyPageHtml  from './verify-page.html';\r\nimport { getStore, removeItem } from '../../_utils';\r\nimport { AuthenticationService } from '../../_services/auth.service';\r\n\r\nexport class VerifyPageComponent extends Component {\r\n\t\r\n\tauthService = new AuthenticationService();\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tverifycode: '',\r\n\t\t\terrors: {\r\n\t\t\t\tverifycode: 'Please enter the verification code!'\r\n\t\t\t},\r\n\t\t\tverifyStatus: '',\r\n\t\t\tsubmitted: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst user = getStore('registration')\r\n\t\tif (user) {\r\n\t\t\tthis.authService.getVerificationCode(user.emailOrPhone, user.firstName).then((res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.props.history.push('/register');\r\n\t\t}\r\n\t}\r\n\tinputChange = (event) => {\r\n\t\tconst { id, value } = event.target;\r\n\t\tthis.setState({ [id]: value });\r\n\t\tthis.validationErrorMessage(event);\r\n\t}\r\n\r\n\tvalidationErrorMessage = (event) => {\r\n\t\tconst { id, value } = event.target;\r\n\t\tlet errors = this.state.errors;\r\n\t\tswitch (id) {\r\n\t\tcase 'verifycode': \r\n\t\t\terrors.verifycode = value.length < 1 ? 'Please enter the verification code!' : '';\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.setState({ errors });\r\n\t}\r\n\r\n\tvalidateForm = (errors) => {\r\n\t\tlet valid = true;\r\n\t\tObject.entries(errors).forEach(item => {\r\n\t\t\titem && item[1].length > 0 && (valid = false)\r\n\t\t});\r\n\t\treturn valid;\r\n\t}\r\n\r\n\tregisterUser = async (event) => {\r\n\t\tthis.setState({ submitted: true });\r\n\t\tevent.preventDefault();\r\n\t\tif (this.validateForm(this.state.errors)) {\r\n\t\t\tconsole.info('Valid Form')\r\n\t\t\tconst user = getStore('registration');\r\n\t\t\tif (user) {\r\n\t\t\t\tuser['verificationCode'] = this.state.verifycode;\r\n\t\t\t\tthis.authService.registerUser(user).then((response) => {\r\n\t\t\t\t\tif(response.data.hasOwnProperty('createAccount')) {\r\n\t\t\t\t\t\tremoveItem('registration');\r\n\t\t\t\t\t\tthis.setState(this.initialState);\r\n\t\t\t\t\t\tthis.setState({'verifyStatus': \"User registered successfully!! \\n You will be redirected to login page!\"});\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tthis.props.history.push('/login');\r\n\t\t\t\t\t\t},4000);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\tthis.setState({ verifyStatus: 'Verification Failed !!'})\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log('Invalid Form')\r\n\t\t}\r\n\t}\r\n\r\n  render() {\r\n\t\r\n    return VerifyPageHtml(this)\r\n    \r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.user.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(VerifyPageComponent));\r\n","import VerifyPageComponent from './verify-page';\r\n\r\nexport default VerifyPageComponent;"],"sourceRoot":""}