{"version":3,"sources":["../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/divWithClassName.js","_components/registration/registration.html.js","_components/registration/registration.js","_components/registration/index.js"],"names":["CardImg","React","ref","bsPrefix","className","variant","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","p","RegistrationHtml","_","state","user","errors","success","userAvailableCheck","submitted","registrationStatus","Row","Col","xl","lg","md","sm","xs","Form","onSubmit","handleSubmit","Group","FloatingLabel","controlId","label","firstName","length","inputChange","Control","type","placeholder","lastName","username","checkUserNameAvailable","emailOrPhone","Label","Check","name","id","inline","onChange","handleChange","checked","gender","dob","change","floatLabelType","cssClass","password","Button","size","href","Registration","authService","AuthenticationService","event","setState","target","trim","userAvailable","then","res","data","hasOwnProperty","checkUserName","isAvailable","undefined","element","validationErrorMessage","dobValidation","e","validateForm","valid","entries","forEach","item","preventDefault","console","info","setStore","dispatch","AuthenticationActionCreators","registrationInfo","history","push","log","initialState","d","Date","getFullYear","this","connect","profile","registerData","withRouter"],"mappings":"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","file":"static/js/8.7bd29e58.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { DatePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from 'react-bootstrap/Card';\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\n\r\nconst RegistrationHtml = (_) => {\r\n  \r\n  const { user, errors, success, userAvailableCheck, submitted, registrationStatus } = _.state;   \r\n  \r\n  return (\r\n      <div className=\"container\">\r\n         <Row className=\"justify-content-md-center\">\r\n          <Col xl=\"6\" lg=\"7\" md=\"8\" sm=\"10\" xs=\"12\">\r\n            <Card>\r\n              <Card.Title>Register</Card.Title>\r\n              <Card.Body>\r\n                <Form className=\"regisform\" onSubmit={_.handleSubmit}>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group  className=\"mb-3\">  \r\n                        <FloatingLabel\r\n                          controlId=\"firstName\"\r\n                          label=\"First Name\"\r\n                          className=\"mb-3\"\r\n                          className={submitted && errors.firstName.length > 0 ? 'showError' : ''}\r\n                          value={user.firstName}    \r\n                          onChange={_.inputChange}    \r\n                        >\r\n                          <Form.Control type=\"text\" placeholder=\"First Name\" />    \r\n                        </FloatingLabel>\r\n                          { submitted && errors.firstName.length > 0 &&  <small className='error'>{errors.firstName}</small>}\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Group  className=\"mb-3\">\r\n                        <FloatingLabel\r\n                          controlId=\"lastName\"\r\n                          label=\"Last Name\"\r\n                          className=\"mb-3\"\r\n                          className={submitted && errors.lastName.length > 0 ? 'showError' : ''}\r\n                          value={user.lastName}    \r\n                          onChange={_.inputChange}    \r\n                        >\r\n                          <Form.Control type=\"text\" placeholder=\"Last Name\" />\r\n                        </FloatingLabel>    \r\n                        { submitted && errors.lastName.length > 0 &&  <small className='error'>{errors.lastName}</small>}\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group  className=\"mb-3\">\r\n                         <FloatingLabel\r\n                          controlId=\"username\"\r\n                          label=\"Create Username\"\r\n                          className=\"mb-3\"\r\n                          className = {submitted && errors.username.length > 0 ? 'showError' : ''}\r\n                          className = {userAvailableCheck && success.username.length > 0 ? 'validInput' : ''}\r\n                          value={user.username}    \r\n                          onChange={_.inputChange}\r\n                          onBlur={_.checkUserNameAvailable} \r\n                        >\r\n                          <Form.Control type=\"text\" placeholder=\"Username\"/>\r\n\r\n                        </FloatingLabel>\r\n                        { userAvailableCheck && success.username.length > 0 &&  <small className='successMsg'>{success.username}</small>}\r\n                        { userAvailableCheck && success.username.length === 0 &&  <small className='errorMsg'>{errors.username}</small>}\r\n                        { !userAvailableCheck && submitted && errors.username.length > 0 &&  <small className='error'>{errors.username}</small>}\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                   <Row>\r\n                    <Col>\r\n                      <Form.Group  className=\"mb-3\">\r\n                         <FloatingLabel\r\n                          controlId=\"emailOrPhone\"\r\n                          label=\"Email or Phone Number\"\r\n                          className=\"mb-3\"\r\n                          className = {submitted && errors.emailOrPhone.length > 0 ? 'showError' : ''}\r\n                          value={user.emailOrPhone}    \r\n                          onChange={_.inputChange}    \r\n                        >\r\n                          <Form.Control type=\"text\" placeholder=\"Email or Phone Number\"/>    \r\n                        </FloatingLabel>\r\n                        { submitted && errors.emailOrPhone.length > 0 &&  <small className='error'>{errors.emailOrPhone}</small>}\r\n                          \r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Label className=\"f-14\">Gender</Form.Label>\r\n                      <Form.Group  className=\"mb-3\">\r\n                          <Form.Check type=\"radio\" name=\"gender\"  \r\n                                          id=\"male\" \r\n                                          inline   \r\n                                          value=\"male\"    \r\n                                          onChange={_.handleChange}  \r\n                                          label=\"Male\" \r\n                                          checked={user.gender === 'male'}\r\n                                          className=\"f-14\"\r\n                                          />    \r\n                          \r\n                          <Form.Check type=\"radio\" name=\"gender\"  \r\n                                          id=\"female\"   \r\n                                          inline\r\n                                          value=\"female\"    \r\n                                          onChange={_.handleChange}  \r\n                                          label=\"Female\"  \r\n                                          checked={user.gender === 'female'}\r\n                                          className=\"f-14\"\r\n                                          />    \r\n                          \r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Group className=\"custom-group\">\r\n                        <DatePickerComponent id=\"dob\" value={user.dob} change={_.inputChange} placeholder=\"Date of Birth\" floatLabelType=\"Auto\"\r\n                          cssClass = {submitted && errors.dob.length > 0 ? 'showError' : ''}\r\n                        />\r\n                        { submitted && errors.dob.length > 0 &&  <small className='error'>{errors.dob}</small>}\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group  className=\"mb-3\">\r\n                         <FloatingLabel\r\n                          controlId=\"password\"\r\n                          label=\"Create Password\"\r\n                          type=\"password\"\r\n                          className=\"mb-3\"\r\n                          className =  {submitted && errors.password.length > 0 ? 'showError' : ''}\r\n                          value={user.password}    \r\n                          onChange={_.inputChange}    \r\n                        >\r\n                          <Form.Control type=\"password\" placeholder=\"password\"/>\r\n\r\n                        </FloatingLabel>\r\n                        { submitted && errors.password.length > 0 &&  <small className='error'>{errors.password}</small>}\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                 \r\n                  <Form.Group  className=\"mb-3\">\r\n                    <div className=\"d-grid gap-2\">\r\n                      <Button  variant=\"primary\" size=\"lg\" type=\"submit\">Create Account</Button>\r\n                    </div>\r\n                  </Form.Group>\r\n                  <p className=\"f-14 align-center\">Already have an account? <a href=\"/login\">Signin</a></p>\r\n                </Form>\r\n              \r\n\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default RegistrationHtml;","import React, { Component } from 'react';\r\nimport { withRouter} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { AuthenticationActionCreators } from '../../_actions';\r\nimport { setStore } from '../../_utils';\r\nimport  RegistrationHtml  from './registration.html';\r\nimport { AuthenticationService } from '../../_services/auth.service';\r\n\r\nexport class Registration extends Component {\r\n\r\n    authService = new AuthenticationService();\r\n\r\n    \r\n\r\n  \tconstructor(props) {    \r\n\t\tsuper(props);   \r\n    this.state = {\r\n      user: {\r\n        firstName: '', \r\n        lastName: '',\r\n        username: '',\r\n        password: '',\r\n        emailOrPhone: '',  \r\n        dob: \"\",\r\n        gender: \"male\"\r\n      },\r\n      errors: {\r\n        firstName: 'Please enter First Name!',\r\n        lastName: 'Please enter Last Name!',\r\n        username: 'Please enter User Name!',\r\n        password: 'Please enter Password!',\r\n        emailOrPhone: 'Please enter Email or Phone Number!',\r\n        dob: 'Please select your Date of Birth!'\r\n      },\r\n      success: {\r\n        username: \"\"\r\n      },\r\n      registrationStatus: '',\r\n      userAvailableCheck: false, \r\n      submitted: false\r\n\t\t} \r\n    console.log(this.state);\r\n    console.log(this.props);\r\n    this.initialState = this.state;    \r\n    \r\n  \t}    \r\n\r\n    checkUserNameAvailable = (event) => {\r\n      this.setState({ 'userAvailableCheck': false });\r\n      const { value } = event.target;\r\n      if(value.trim() === \"\") return;\r\n      let errors = this.state.errors;\r\n      let success = this.state.success;\r\n      this.authService.userAvailable(this.state.user.username).then((res) =>{ \r\n        this.setState({ 'userAvailableCheck': true });\r\n        if(res.data.hasOwnProperty('checkUserName') && res.data.checkUserName.isAvailable) {\r\n          success.username = \"Username Available\";\r\n        } else {\r\n          success.username = \"\";\r\n          errors.username = \"Username not available\";\r\n        }\r\n        this.setState({errors});\r\n        this.setState({success});\r\n      });\r\n    }\r\n  \r\n    inputChange = (event) => {\r\n        const { id, value } = event.target === undefined ? event.element : event.target;\r\n        this.setState({ user: { ...this.state.user, ...{[id] : value } }});\r\n        this.validationErrorMessage(event);\r\n    }\r\n\r\n\tvalidationErrorMessage = (event) => {\r\n\t\tconst { id, value } = event.target === undefined ? event.element : event.target;\r\n\t\tlet errors = this.state.errors;\r\n\t\tswitch (id) {\r\n\t\tcase 'firstName': \r\n\t\t\terrors.firstName = value.length < 1 ? 'First Name is required' : '';\r\n\t\t\tbreak;\r\n\t\tcase 'lastName': \r\n\t\t\terrors.lastName = value.length < 1 ? 'Last Name is required' : '';\r\n\t\t\tbreak;\r\n\t\tcase 'username': \r\n\t\t  \terrors.username = value.length < 1 ? 'User Name is required' : '';\r\n\t\t\tbreak;\r\n\t\tcase 'emailOrPhone': \r\n      errors.emailOrPhone = value.length < 1 ? 'Email or Phone is required' : '';\r\n\t\t\tbreak;\r\n\t\tcase 'password': \r\n\t\t\terrors.password = value.length < 1 ? 'Password is required' : '';\r\n\t\t\tbreak;\r\n\t\tcase 'dob': \r\n    \terrors.dob = value === null ? 'Date of Birth is required' : \r\n          this.dobValidation(value) ? '' : 'Age must be atleast 13 years';\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.setState({ errors });\r\n\t}\r\n\r\n  dobValidation(value) {\r\n    let d = new Date(value);\r\n    let td = new Date();\r\n    return td.getFullYear() - d.getFullYear() > 13 ? true : false;\r\n  }\r\n  \r\n\thandleChange = (e) => {    \r\n\t\tconst { name, value } = e.target;    \r\n\t\tthis.setState({ user: { ...this.state.user, ...{[name] : value } }});    \r\n\t}  \r\n  \r\n  validateForm = (errors) => {\r\n\t\tlet valid = true;\r\n\t\tObject.entries(errors).forEach(item => {\r\n\t\t\titem && item[1].length > 0 && (valid = false)\r\n\t\t});\r\n\t\treturn valid;\r\n\t}\r\n\r\n\thandleSubmit = (e) => {    \r\n\t\tthis.setState({ submitted: true });\r\n\t\te.preventDefault();\r\n\t\tif (this.validateForm(this.state.errors)) {\r\n\t\t\tconsole.info('Valid Form');\r\n      setStore('registration', this.state.user);\r\n      this.props.dispatch(AuthenticationActionCreators.registrationInfo(this.state.user));\r\n      this.props.history.push('/verify-user');\r\n   \t} else {\r\n\t\t\tconsole.log('Invalid Form')\r\n\t\t}\r\n        \r\n\t}    \r\n\r\n  \r\n  \trender() {\r\n    return RegistrationHtml(this) \r\n\t} \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.user.profile,\r\n    registerData: state.registerData\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Registration));\r\n","import Registration from './registration';\r\n\r\nexport default Registration;"],"sourceRoot":""}