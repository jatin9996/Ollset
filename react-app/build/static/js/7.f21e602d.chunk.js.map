{"version":3,"sources":["_components/login/login.html.js","_components/login/login.js","_components/login/index.js"],"names":["LoginHtml","_","state","username","password","errors","submitted","loginStatus","className","Row","Col","xl","lg","md","sm","xs","Card","Body","Title","length","Alert","variant","Form","onSubmit","handleSubmit","Group","FloatingLabel","controlId","label","inputChange","Control","size","type","placeholder","name","to","Button","onClick","loginForm","Login","props","authService","AuthenticationService","event","target","id","value","setState","validationErrorMessage","validateForm","valid","Object","entries","forEach","item","a","preventDefault","console","info","user","getStore","dispatch","AuthenticationActionCreators","login","history","push","then","response","data","hasOwnProperty","trackUserLogin","setStore","createLogin","initialState","catch","err","log","this","Component","connect","profile","withRouter"],"mappings":"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","file":"static/js/7.f21e602d.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport './login.css';\r\n\r\nconst LoginHtml = (_) => {\r\n    //const {  passidErr, emailIdErr, authFail } = _.state.formErrors; \r\n    \r\n    const { username, password, errors, submitted, loginStatus } = _.state;   \r\n    return (\r\n      <div className=\"home\">\r\n        <div className=\"container\">\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col xl=\"5\" lg=\"6\" md=\"7\" sm=\"8\" xs=\"12\">\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Login</Card.Title>\r\n                        <Card.Body>\r\n                            { submitted && loginStatus.length > 0 &&  <Alert variant=\"danger\">{loginStatus}</Alert>}\r\n                            <Form onSubmit={_.handleSubmit}>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <FloatingLabel\r\n                                        controlId=\"username\"\r\n                                        label=\"Email Or Phone Number\"\r\n                                        className = \"mb-3\"\r\n                                        className = {submitted && errors.username.length > 0 ? 'showError' : ''}\r\n                                        value={username}    \r\n                                        onChange={_.inputChange}    \r\n                                    >\r\n                                        <Form.Control size=\"lg\" type=\"text\" placeholder=\"Email Or Phone Number\" />\r\n\r\n                                    </FloatingLabel>\r\n                                    { submitted && errors.username.length > 0 &&  <small className='error'>{errors.username}</small>}\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <FloatingLabel\r\n                                        controlId=\"password\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        className=\"mb-3\"\r\n                                        className = {submitted && errors.password.length > 0 ? 'showError' : ''} \r\n                                        onChange={_.inputChange}\r\n                                        value={password}\r\n                                    >\r\n\r\n                                        <Form.Control size=\"lg\" type=\"password\" name=\"password\" placeholder=\"Password\"/>  \r\n                                    </FloatingLabel>\r\n                                    { submitted && errors.password.length > 0 &&  <small className='error'>{errors.password}</small>}\r\n                                </Form.Group>\r\n                                <p className=\"f-14 align-right\"><Link to=\"/reset-password\">Forgot password?</Link></p>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Button size=\"lg\" className=\"form-control\" variant=\"primary\" type=\"submit\" onClick={_.loginForm}>Log in</Button>\r\n                                </Form.Group>\r\n                                <p className=\"f-14 align-center\">Don't have an account? <Link to=\"/register\">Register</Link></p>\r\n\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n         \r\n          </Row>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n       \r\n    )\r\n}\r\n\r\nexport default LoginHtml;","import React, { Component, useState } from 'react';\r\nimport { withRouter} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { AuthenticationActionCreators } from '../../_actions';\r\nimport { getStore, setStore } from '../../_utils';\r\nimport  LoginHtml  from './login.html';\r\nimport { AuthenticationService } from '../../_services/auth.service';\r\n\r\nexport class Login extends Component {\r\n\t\r\n\tauthService = new AuthenticationService();\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\tusername: '',\r\n\t\tpassword: '',\r\n\t\terrors: {\r\n\t\t\tusername: 'Email is required!',\r\n\t\t\tpassword: 'Enter Password!'\r\n\t\t},\r\n\t\tloginStatus: '',\r\n\t\tsubmitted: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst user = getStore('user')\r\n\t\tif (user) {\r\n\t\t\tthis.props.dispatch(AuthenticationActionCreators.login(user));\r\n\t\t\tthis.props.history.push('/calendar')\r\n\t\t}\r\n\t}\r\n\tinputChange = (event) => {\r\n\t\tconst { id, value } = event.target;\r\n\t\tthis.setState({ [id]: value });\r\n\t\tthis.validationErrorMessage(event);\r\n\t}\r\n\r\n\tvalidationErrorMessage = (event) => {\r\n\t\tconst { id, value } = event.target;\r\n\t\tlet errors = this.state.errors;\r\n\t\tswitch (id) {\r\n\t\tcase 'username': \r\n\t\t\terrors.username = value.length < 1 ? 'Email is required' : '';\r\n\t\t\tbreak;\r\n\t\tcase 'password': \r\n\t\t\terrors.password = value.length < 1 ? 'Enter Password' : '';\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.setState({ errors });\r\n\t}\r\n\r\n\tvalidateForm = (errors) => {\r\n\t\tlet valid = true;\r\n\t\tObject.entries(errors).forEach(item => {\r\n\t\t\titem && item[1].length > 0 && (valid = false)\r\n\t\t});\r\n\t\treturn valid;\r\n\t}\r\n\r\n\tloginForm = async (event) => {\r\n\t\tthis.setState({ submitted: true });\r\n\t\tevent.preventDefault();\r\n\t\tif (this.validateForm(this.state.errors)) {\r\n\t\t\tconsole.info('Valid Form')\r\n\t\t\tconst user = getStore('user')\r\n\t\t\tif (user) {\r\n\t\t\t\tthis.props.dispatch(AuthenticationActionCreators.login(user));\r\n\t\t\t\tthis.props.history.push('/calendar')\r\n\t\t\t} else {\r\n\t\t\t\tthis.authService.login(this.state.username, this.state.password).then((response) => {\r\n\t\t\t\t\tif(response.data.hasOwnProperty('createLogin')) {\r\n\t\t\t\t\t\t this.authService.trackUserLogin(this.state.username, true);\r\n\t\t\t\t\t\tsetStore('user', response.data.createLogin);\r\n\t\t\t\t\t\tthis.setState(this.initialState);\r\n\t\t\t\t\t\tthis.props.dispatch(AuthenticationActionCreators.login(response.data.createLogin));\r\n\t\t\t\t\t\tthis.props.history.push('/calendar');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t this.authService.trackUserLogin(this.state.username, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t this.authService.trackUserLogin(this.state.username, false);\r\n\t\t\t\t\tthis.setState({ loginStatus: 'Login Failed! Invalid Username and Password'})\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log('Invalid Form')\r\n\t\t}\r\n\t}\r\n\r\n  render() {\r\n\t\r\n    return LoginHtml(this)\r\n    // const { username, password, errors, submitted, loginStatus } = this.state;\r\n    // return (\r\n    //   <div className=\"pagecenter loginForm\">\r\n    //     <form>\r\n    //       <div className=\"row custom-margin custom-padding-5\">\r\n    //         <div className=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\">\r\n    //             <TextBoxComponent placeholder=\"First Name\" floatLabelType=\"Auto\" required=\"true\"  />\r\n    //              { submitted && errors.username.length > 0 &&  <label className='error'>{errors.username}</label>}\r\n    //         </div>\r\n    //         <div className=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\">\r\n    //             <TextBoxComponent placeholder=\"Last Name\" floatLabelType=\"Auto\" required=\"true\"  />\r\n    //              { submitted && errors.password.length > 0 &&  <label className='error'>{errors.password}</label>}\r\n    //         </div>\r\n    //          <div className=\"col-xs-12 col-sm-12 col-lg-6 col-md-6\">\r\n    //               <ButtonComponent cssClass='e-primary'>Submit</ButtonComponent>\r\n    //           </div>\r\n    //       </div>\r\n    //       <div className=\"row\">\r\n    //         <div className=\"col-sm-3\"></div>\r\n    //         <label htmlFor=\"username\" className=\"col-sm-2 col-form-label\">User Name:</label>\r\n    //         <div className=\"col-sm-3 mb-2\">\r\n    //           <input type=\"text\" value={username} name=\"username\" onChange={(e) => { this.inputChange(e)} } className=\"form-control\" id=\"username\" placeholder=\"User Name\" />\r\n    //           { submitted && errors.username.length > 0 &&  <span className='error'>{errors.username}</span>}\r\n    //         </div>\r\n    //         <div className=\"col-sm-4\">\r\n    //         </div>\r\n    //       </div>\r\n    //       <div className=\"row\">\r\n    //         <div className=\"col-sm-3\"></div>\r\n    //         <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">Password:</label>\r\n    //         <div className=\"col-sm-3 mb-2\">\r\n    //           <input type=\"password\" value={password} autoComplete=\"on\" name=\"password\" onChange={(e) => { this.inputChange(e)} } className=\"form-control\" id=\"password\" placeholder=\"Password\" />\r\n    //           { submitted && errors.password.length > 0 &&  <span className='error'>{errors.password}</span>}\r\n    //         </div>\r\n    //         <div className=\"col-sm-4\"></div>\r\n    //       </div>\r\n    //       <div className=\"row\">\r\n    //         <div className=\"col-sm-12 center mt-1\">\r\n    //           { submitted && loginStatus.length > 0 &&  <span className='error'>{loginStatus}</span>}\r\n    //         </div>\r\n    //       </div>\r\n    //       <div className=\"row\">\r\n    //         <div className=\"col-sm-12 center mt-2\">\r\n    //           <button type=\"submit\" className=\"btn btn-primary\" onClick={this.loginForm}>Login</button>\r\n    //         </div>\r\n    //       </div>\r\n    //       <div className=\"row\">\r\n    //         <div className=\"col-sm-4 mt-2\"></div>\r\n    //         <div className=\"col-sm-4 right\">\r\n    //           <a href=\"/register\">Register</a>\r\n    //         </div>\r\n    //         <div className=\"col-sm-4 mt-2\"></div>\r\n    //       </div>\r\n    //     </form>\r\n    //   </div>\r\n    // )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.user.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Login));\r\n","import Login from './login';\r\n\r\nexport default Login;"],"sourceRoot":""}