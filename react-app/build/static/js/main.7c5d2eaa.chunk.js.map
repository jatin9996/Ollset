{"version":3,"sources":["_services/log.service.js","_services/auth.service.js","_reducers/AuthenticationReducer.js","_store/Store.js","_store/index.js","_components/header/header.html.js","_components/header/header.js","_components/header/index.js","_routes/app-routes.js","App.js","serviceWorker.js","index.js","_utils/index.js","_actions/authenticationTypes.js","_actions/authenticationCreator.js","_services/apollo/apollo-client-config.js","_constants/constants.js"],"names":["LogService","os","name","value","version","browser","header","navigator","platform","userAgent","appVersion","vendor","window","opera","string","data","regexv","matches","i","j","length","RegExp","test","match","split","parseFloat","agent","this","join","matchItem","getStore","address","AuthenticationService","logService","username","password","params","AClient","mutate","mutation","gql","variables","notifyOnNetworkStatusChange","emailorphone","firstname","emailOrPhone","user","dob","loginStatus","getSystemInfo","console","log","removeItem","initialState","profile","access_token","companyId","contactId","createDate","emailAddress","emailAddressVerified","expires_in","failedLoginAttempts","firstName","groupId","jobTitle","languageId","lastFailedLoginDate","lastLoginDate","lastLoginIP","lastName","loginDate","middleName","modifiedDate","refresh_token","screenName","status","timeZoneId","token_type","userId","coverImage","portraitImage","uuid","formSubmitted","reducer","state","action","type","AuthenticationTypes","LOGIN","payload","ADD_USER","UPDATE_USER","UPDATE_PROFILE_PICTURE","profileImage","image","FORM_SUBMITION_STATUS","REGISTER_INFO","registerData","AppReducer","combineReducers","AuthenticationReducer","configureStore","createStore","compose","applyMiddleware","thunk","HeaderHtml","_","loadHtml","Col","md","Navbar","Collapse","id","Nav","className","Link","href","xmlns","width","height","fill","viewBox","d","fillRule","to","Button","size","variant","props","collapseOnSelect","expand","bg","sticky","Row","xs","Brand","src","LOGO","alt","placeholder","classNames","Toggle","aria-controls","Dropdown","align","URL","Menu","Item","onClick","logout","Header","history","push","Component","connect","withRouter","LoginComponent","lazy","RegistrationComponent","VerifyPageComponent","CalendarComponent","ResetPasswordComponent","UpdatePasswordComponent","AppRoutes","routes","path","redirect","exact","component","auth","RouteBody","authenticationService","prepareRoutes","forEach","route","filter","hasOwnProperty","map","routesInfo","index","key","render","isUserLoggedIn","notificationContext","globalContext","setLoading","body","fallback","App","dispatch","AuthenticationActionCreators","login","fetch","then","response","json","setStore","ip","React","Boolean","location","hostname","store","ReactDOM","StrictMode","document","getElementById","content","JSON","stringify","localStorage","setItem","parse","getItem","clear","registrationInfo","addProfile","updateProfileImage","updateProfile","formSubmittionStatus","httpLink","createHttpLink","uri","authLink","setContext","headers","userToken","undefined","Authorization","ApolloClient","link","concat","cache","InMemoryCache","addTypename","awaitRefetchQueries","LIFERAY_ID","LIFERAY_SECRET_CLIENT"],"mappings":"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","file":"static/js/main.7c5d2eaa.chunk.js","sourcesContent":["import { getStore } from \"../_utils\"; \r\n\r\nexport class LogService {\r\n    \r\n    os = [\r\n        { name: 'Windows Phone', value: 'Windows Phone', version: 'OS' },\r\n        { name: 'Windows', value: 'Win', version: 'NT' },\r\n        { name: 'iPhone', value: 'iPhone', version: 'OS' },\r\n        { name: 'iPad', value: 'iPad', version: 'OS' },\r\n        { name: 'Kindle', value: 'Silk', version: 'Silk' },\r\n        { name: 'Android', value: 'Android', version: 'Android' },\r\n        { name: 'PlayBook', value: 'PlayBook', version: 'OS' },\r\n        { name: 'BlackBerry', value: 'BlackBerry', version: '/' },\r\n        { name: 'Macintosh', value: 'Mac', version: 'OS X' },\r\n        { name: 'Linux', value: 'Linux', version: 'rv' },\r\n        { name: 'Palm', value: 'Palm', version: 'PalmOS' }\r\n    ];\r\n    browser = [\r\n        { name: 'Chrome', value: 'Chrome', version: 'Chrome' },\r\n        { name: 'Firefox', value: 'Firefox', version: 'Firefox' },\r\n        { name: 'Safari', value: 'Safari', version: 'Version' },\r\n        { name: 'Internet Explorer', value: 'MSIE', version: 'MSIE' },\r\n        { name: 'Opera', value: 'Opera', version: 'Opera' },\r\n        { name: 'BlackBerry', value: 'CLDC', version: 'CLDC' },\r\n        { name: 'Mozilla', value: 'Mozilla', version: 'Mozilla' }\r\n    ];\r\n    header = [\r\n        navigator.platform,\r\n        navigator.userAgent,\r\n        navigator.appVersion,\r\n        navigator.vendor,\r\n        window.opera\r\n    ];\r\n\r\n    matchItem(string, data) {\r\n        var i = 0,\r\n            j = 0,\r\n            html = '',\r\n            regex,\r\n            regexv,\r\n            match,\r\n            matches,\r\n            version;\r\n        \r\n        for (i = 0; i < data.length; i += 1) {\r\n            regex = new RegExp(data[i].value, 'i');\r\n            match = regex.test(string);\r\n            if (match) {\r\n                regexv = new RegExp(data[i].version + '[- /:;]([\\d._]+)', 'i');\r\n                matches = string.match(regexv);\r\n                version = '';\r\n                if (matches) { if (matches[1]) { matches = matches[1]; } }\r\n                if (matches) {\r\n                    matches = matches.split(/[._]+/);\r\n                    for (j = 0; j < matches.length; j += 1) {\r\n                        if (j === 0) {\r\n                            version += matches[j] + '.';\r\n                        } else {\r\n                            version += matches[j];\r\n                        }\r\n                    }\r\n                } else {\r\n                    version = '0';\r\n                }\r\n                return {\r\n                    name: data[i].name,\r\n                    version: parseFloat(version)\r\n                };\r\n            }\r\n        }\r\n        return { name: 'unknown', version: 0 };\r\n    }\r\n\r\n    getSystemInfo() {\r\n        let agent = this.header.join(' ');\r\n        let os = this.matchItem(agent, this.os);\r\n        let browser = this.matchItem(agent, this.browser);\r\n        return { \"deviceName\": os.name, \"browserName\": browser.name, \"ipAddress\": getStore('ip').address, \"ua\": navigator.userAgent };\r\n    }\r\n}","import { AClient, AClientHeaders, GQL } from './apollo/apollo-client-config';\r\n\r\nimport {\r\n    gql\r\n  } from \"@apollo/client\";\r\nimport { getStore, removeItem } from '../_utils';\r\nimport { LogService } from './log.service';\r\n\r\nexport class AuthenticationService {\r\n  \r\n  logService = new LogService();\r\n  \r\n  login(username, password) {\r\n    let params = {\r\n        \"username\": username,\r\n        \"password\": password\r\n    };\r\n    return AClient.mutate({\r\n        mutation: gql`\r\n          mutation($username :String!, $password: String!) {\r\n            createLogin(loginRequestModel: {\r\n                    clientId: \"id-d0507e10-cb80-e41f-48bf-219a841deac8\",\r\n                    clientSecret: \"secret-32f818d7-ccba-68fe-92be-5ab913e1e6\",\r\n                    username: $username,\r\n                    password: $password\r\n                }){\r\n                access_token\r\n                companyId\r\n                contactId\r\n                createDate\r\n                emailAddress\r\n                emailAddressVerified\r\n                expires_in\r\n                failedLoginAttempts\r\n                firstName\r\n                groupId\r\n                jobTitle\r\n                languageId\r\n                lastFailedLoginDate\r\n                lastLoginDate\r\n                lastLoginIP\r\n                lastName\r\n                loginDate\r\n                middleName\r\n                modifiedDate\r\n                refresh_token\r\n                screenName\r\n                status\r\n                timeZoneId\r\n                token_type\r\n                userId\r\n                coverImage\r\n                portraitImage\r\n                uuid\r\n              }\r\n          }`,\r\n          variables : params,\r\n          notifyOnNetworkStatusChange: true\r\n      });\r\n  }\r\n\r\n  getVerificationCode(emailorphone, firstname) {\r\n    let params = {\r\n      emailOrPhone: emailorphone,\r\n      name: firstname\r\n    }\r\n    return AClient.mutate({\r\n        mutation: gql`\r\n        mutation($emailOrPhone: String!, $name: String!) {\r\n          createSendVerification(sendVerificationRequestModel: {\r\n            emailOrPhone: $emailOrPhone,\r\n            name: $name\r\n          }),\r\n          {\r\n            isSent\r\n            reason\r\n          }\r\n        }`,\r\n        variables: params\r\n\r\n      });\r\n  }\r\n\r\n  registerUser(user) {\r\n    user.dob = \"04/04/1990\";\r\n    let params = { ...user };\r\n\r\n    return AClient.mutate({\r\n        mutation: gql`\r\n          mutation($dob: String!, $emailOrPhone: String!, $firstName: String!, $lastName: String!, $gender: String!, $password: String!, $username: String!, $verificationCode: String!){\r\n            createAccount(userRequestModel: {\r\n              dob: $dob,\r\n              emailOrPhone: $emailOrPhone,\r\n              firstName: $firstName,\r\n              lastName: $lastName,\r\n              gender: $gender,\r\n              password: $password,\r\n              username: $username,\r\n              verificationCode: $verificationCode\r\n            }){\r\n            companyId\r\n            contactId\r\n            createDate\r\n            emailAddress\r\n            emailAddressVerified\r\n            failedLoginAttempts\r\n            firstName\r\n            groupId\r\n            jobTitle\r\n            languageId\r\n            lastFailedLoginDate\r\n            lastLoginDate\r\n            lastLoginIP\r\n            lastName\r\n            loginDate\r\n            middleName\r\n            modifiedDate\r\n            screenName\r\n            status\r\n            timeZoneId\r\n            userId\r\n            uuid\r\n          }\r\n        }`,\r\n        variables: params\r\n      });\r\n  }\r\n\r\n  trackUserLogin(username, loginStatus) {\r\n    let params = { ...this.logService.getSystemInfo(), \"loginStatus\": loginStatus, \"userName\": username};\r\n    console.log(params);\r\n    return AClient.mutate({\r\n        mutation: gql`\r\n          mutation($userName :String!, $ipAddress: String!, $deviceName: String!, $browserName: String!, $ua: String!, $loginStatus: Boolean!) {\r\n            createTrackLogin(loginTrackingRequestModel: {\r\n                username: $userName,\r\n                ipAddress: $ipAddress,\r\n                loginSuccess: $loginStatus,\r\n                deviceName: $deviceName,\r\n                browserName: $browserName,\r\n                ua: $ua\r\n            })\r\n        }`,\r\n        variables: params\r\n      });\r\n  }\r\n\r\n  sendResetLink(username) {\r\n     let params = { \"username\": username};\r\n      console.log(params);\r\n      return AClient.mutate({\r\n          mutation: gql`\r\n            mutation($username: String!) {\r\n            createSendPasswordResetCode(sendVerificationRequestModel: {\r\n              emailOrPhone: $username\r\n            }){\r\n              isSent\r\n              reason\r\n            }\r\n          }`,\r\n          variables: params\r\n        });\r\n    \r\n  }\r\n  \r\n  updatePassword(username, password) {\r\n     let params = { \"username\": username, \"password\": password};\r\n      console.log(params);\r\n      return AClient.mutate({\r\n          mutation: gql`\r\n            mutation($username: String!, $password: String!) {\r\n            createSendPasswordResetCode(sendVerificationRequestModel: {\r\n              emailOrPhone: $username,\r\n              newpassword: $password\r\n            }){\r\n              isSent\r\n              reason\r\n            }\r\n          }`,\r\n          variables: params\r\n        });\r\n    \r\n  }\r\n\r\n  userAvailable(username) {\r\n    return AClient.mutate({\r\n        mutation: gql`\r\n          query{\r\n            checkUserName(userName: \"${username}\"){\r\n              isAvailable\r\n            }\r\n          }`\r\n        });\r\n  }\r\n\r\n  isUserLoggedIn() {\r\n    const user = getStore('user');\r\n    return user ? true : false;\r\n  }\r\n\r\n  logout(params) {\r\n    removeItem();\r\n  }\r\n\r\n \r\n}","import { AuthenticationTypes } from '../_actions';\r\n\r\nconst initialState = {\r\n  profile: {\r\n      access_token: \"\",\r\n      companyId: \"\",\r\n      contactId: \"\",\r\n      createDate: \"\",\r\n      emailAddress: \"\",\r\n      emailAddressVerified: \"\",\r\n      expires_in: \"\",\r\n      failedLoginAttempts: \"\",\r\n      firstName: \"\",\r\n      groupId: \"\",\r\n      jobTitle: \"\",\r\n      languageId: \"\",\r\n      lastFailedLoginDate: \"\",\r\n      lastLoginDate: \"\",\r\n      lastLoginIP: \"\",\r\n      lastName: \"\",\r\n      loginDate: \"\",\r\n      middleName: \"\",\r\n      modifiedDate: \"\",\r\n      refresh_token: \"\",\r\n      screenName: \"\",\r\n      status: \"\",\r\n      timeZoneId: \"\",\r\n      token_type: \"\",\r\n      userId: \"\",\r\n      coverImage: \"\",\r\n      portraitImage: \"\",\r\n      uuid: \"\"\r\n\r\n  },\r\n  formSubmitted: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AuthenticationTypes.LOGIN:\r\n    console.log('login', action.payload.user)\r\n      return {\r\n        ...state,\r\n        profile: action.payload.user,\r\n        formSubmitted: false // after update user formsubmition reset\r\n      }\r\n    case AuthenticationTypes.ADD_USER:\r\n      return {\r\n        ...state,\r\n        profile: action.payload.user,\r\n        formSubmitted: false // after update user formsubmition reset\r\n      }\r\n    case AuthenticationTypes.UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        profile: action.payload.user,\r\n        formSubmitted: false // after update user formsubmition reset\r\n      }\r\n    case AuthenticationTypes.UPDATE_PROFILE_PICTURE:\r\n      return {\r\n        ...state,\r\n        profile: {\r\n          ...state.profile,\r\n          profileImage: action.payload.image\r\n        }\r\n      }\r\n    case AuthenticationTypes.FORM_SUBMITION_STATUS:\r\n      return {\r\n        ...state,\r\n        formSubmitted: action.payload.status\r\n      }\r\n    case AuthenticationTypes.REGISTER_INFO: \r\n      return {\r\n        ...state,\r\n        registerData: action.payload.user,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport AuthenticationReducer from '../_reducers/AuthenticationReducer';\r\n\r\nconst AppReducer = combineReducers({\r\n  user: AuthenticationReducer\r\n});\r\n\r\nconst configureStore = () => {\r\n  return createStore(\r\n    AppReducer,\r\n    compose(applyMiddleware(thunk))\r\n  );\r\n};\r\n\r\nexport default configureStore;","import configureStore from './Store';\r\n\r\nexport default configureStore;","import * as React from 'react';\r\nimport { getStore, setStore } from '../../_utils';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport {Row, Col, Dropdown} from 'react-bootstrap';\r\nimport Container from 'react-bootstrap/Container';\r\nimport SearchField from \"react-search-field\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { LOGO, URL } from \"../../_constants/constants\";\r\nimport \"./header.css\";\r\n\r\n\r\n\r\nconst HeaderHtml = (_) => {\r\n    //const {  passidErr, emailIdErr, authFail } = _.state.formErrors; \r\n    const user = getStore('user');\r\n    let loadHtml = '';\r\n\r\n    if(user) {\r\n        loadHtml = \r\n            <Col md=\"4\">\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto d-flex\">\r\n                        <Nav.Link href=\"#/home\" className=\"bold g-r-24\">\r\n                            <i className=\"header-menu-icon g-r-10\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-people-fill\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\r\n                                    <path fillRule=\"evenodd\" d=\"M5.216 14A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216z\"/>\r\n                                    <path d=\"M4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z\"/>\r\n                                </svg>    \r\n                            </i>\r\n                            Social Events\r\n                        </Nav.Link>\r\n                        <Nav.Link href=\"#/calendar\" className=\"bold g-r-24\">\r\n                            <i className=\"header-menu-icon g-r-10\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-calendar2-event-fill\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zm9.954 3H2.545c-.3 0-.545.224-.545.5v1c0 .276.244.5.545.5h10.91c.3 0 .545-.224.545-.5v-1c0-.276-.244-.5-.546-.5zM11.5 7a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1z\"/>\r\n                                </svg>   \r\n                            </i>\r\n                            Calendar\r\n                        </Nav.Link>\r\n                        <Nav.Link href=\"#/calendar\" className=\"bold\">\r\n                            <i className=\"header-menu-icon g-r-10\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-gear-fill\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z\"/>\r\n                                </svg>\r\n                            </i>\r\n                            Settings\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Col>\r\n    } else {\r\n        loadHtml = \r\n                <Col md=\"8\" className=\"d-flex justify-content-end\">\r\n                    <div>\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/login\">\r\n                                <Button size=\"lg\" className=\"form-control\" variant=\"outline-secondary\">Log in</Button>\r\n                            </Link>\r\n                            </li>\r\n                            <li\r\n                            className=\"nav-item\"\r\n                            >\r\n                            <Link className=\"nav-link\" to=\"/register\">\r\n                                <Button size=\"lg\" className=\"form-control\" variant=\"primary\">Register</Button>\r\n                            </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </Col>\r\n    }   \r\n    \r\n    return (\r\n        <>\r\n            { _.props.profile !== null ?\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\" sticky=\"top\" >\r\n                    <div className=\"container-fluid\">\r\n                        <Row>\r\n\r\n                        </Row>\r\n                        <Col xs=\"8\" md=\"4\" className=\"d-flex justify-content-center align-items-center\">\r\n                            <Navbar.Brand href=\"/\">\r\n                                <img src={LOGO} alt=\"Logo\" className=\"Brandlogo\" />\r\n                            </Navbar.Brand>\r\n                            <SearchField placeholder=\"Type to search...\"  classNames=\"Navsearch\"/>\r\n                            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                        </Col>\r\n                        { loadHtml}\r\n                        { user ? \r\n                            <Col xs=\"4\" md=\"4\" className=\"d-flex justify-content-end align-items-center\">\r\n                                <span className=\"g-r-24\" >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-bell-fill\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\"/>\r\n                                    </svg>\r\n                                </span>  \r\n                                <span >\r\n                                <Dropdown align=\"end\">\r\n                                        <Dropdown.Toggle id=\"dropdown-custom-components\">\r\n                                            <img src={`${URL}${_.props.profile.portraitImage}`} className=\"header-user-icon g-r-10\"/>\r\n                                            <label className=\"f-16 bold primary-color g-r-24\">{`${_.props.profile.firstName} ${_.props.profile.lastName}`}</label>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#555360\" className=\"bi bi-chevron-down\" viewBox=\"0 0 16 16\">\r\n                                                <path fillRule=\"evenodd\" d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"/>\r\n                                            </svg>\r\n                                        </Dropdown.Toggle>\r\n\r\n                                        <Dropdown.Menu>\r\n                                            <Dropdown.Item onClick={_.logout}>Logout</Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                \r\n                                </span>  \r\n                                \r\n                            </Col>\r\n                            : \"\"    \r\n                        }\r\n                    </div>\r\n                </Navbar>\r\n                :\r\n                \"\"\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HeaderHtml;","import React, { Component, useState } from 'react';\r\nimport { withRouter} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport  HeaderHtml  from './header.html';\r\nimport { removeItem } from '../../_utils';\r\n\r\nexport class Header extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n  logout = () => {\r\n    removeItem('user');\r\n    this.props.history.push('/login');\r\n  }\r\n\t\r\n  render() {\r\n    return HeaderHtml(this)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.user.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Header));\r\n","import Header from './header';\r\n\r\nexport default Header;","import React, { Component, Suspense, lazy } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, HashRouter } from 'react-router-dom';\r\nimport { AuthenticationService } from \"../_services/auth.service\";\r\nimport Header  from \"../_components/header\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst LoginComponent = lazy(() => import('../_components/login'));\r\nconst RegistrationComponent = lazy(() => import('../_components/registration'));\r\nconst VerifyPageComponent = lazy(() => import('../_components/verify-page'));\r\nconst CalendarComponent = lazy(() => import('../_components/calendar'));\r\nconst ResetPasswordComponent = lazy(() => import('../_components/reset-password'));\r\nconst UpdatePasswordComponent = lazy(() => import('../_components/update-password'));\r\n\r\n\r\n\r\nexport const AppRoutes = {\r\n  routes: [\r\n    {\r\n      path: \"/\",\r\n      redirect: '/login',\r\n      exact: true\r\n    },\r\n    {\r\n      path: \"/login\",\r\n      component: LoginComponent,\r\n      exact: true\r\n    },\r\n    {\r\n      path: \"/register\",\r\n      component: RegistrationComponent,\r\n      exact: true\r\n    },\r\n    {\r\n      path: \"/verify-user\",\r\n      component: VerifyPageComponent,\r\n      exact: true\r\n    },\r\n    {\r\n      path: \"/reset-password\",\r\n      component: ResetPasswordComponent,\r\n      exact: true\r\n    },\r\n    {\r\n      path: \"/update-password\",\r\n      component: UpdatePasswordComponent,\r\n      exact: true\r\n    },\r\n    {\r\n      path: \"/calendar\",\r\n      component: CalendarComponent,\r\n      exact: true,\r\n      auth: true\r\n    }\r\n  ]\r\n};\r\n\r\nexport class RouteBody extends Component {\r\n  authenticationService = new AuthenticationService();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      body: this.prepareRoutes()\r\n    };\r\n    \r\n  }\r\n\r\n  prepareRoutes = () => {\r\n    // let initComponent = isCustomer() ? CustomerLogin : Login;\r\n\r\n    AppRoutes.routes.forEach((route) => {\r\n      route.component = route.component === 'component' ? LoginComponent : route.component\r\n    });\r\n\r\n    let routes = AppRoutes.routes.filter((route) => route.hasOwnProperty('path'));\r\n    let body = routes.map((routesInfo, index) => {\r\n      if (routesInfo.hasOwnProperty(\"auth\") && routesInfo.auth === true) { // Routes for logged in user\r\n        return (\r\n          <Route\r\n            props={this.props}\r\n            key={index}\r\n            path={routesInfo.path}\r\n            render={props =>\r\n              this.authenticationService.isUserLoggedIn() ? (\r\n                <div className='bodyWrapper'>\r\n                  <routesInfo.component\r\n                    {...props}\r\n                    notificationContext={this.props.notificationContext}\r\n                    globalContext={this.props.globalContext}\r\n                    setLoading={this.props.setLoading}\r\n                  />{\" \"}\r\n                </div>\r\n              ) : (\r\n                  <Redirect to='/' />\r\n                )\r\n            }\r\n          />\r\n        )\r\n      } else if (routesInfo.path === \"/\") { // Login page route \r\n        return (\r\n          <Route exact path=\"/\" key={index}>\r\n            { this.authenticationService.isUserLoggedIn() ? <Redirect to=\"/calendar\"/> : <Redirect to={routesInfo.redirect} /> }\r\n          </Route>\r\n        );\r\n      } else { // All other routes\r\n        return (\r\n          <Route\r\n            props={this.props}\r\n            key={index}\r\n            path={routesInfo.path}\r\n            render={props => (\r\n              <div className='bodyWrapper'>\r\n                <routesInfo.component\r\n                  {...props}\r\n                  notificationContext={this.props.notificationContext}\r\n                  globalContext={this.props.globalContext}\r\n                  setLoading={this.props.setLoading} />\r\n              </div>\r\n            )}\r\n            exact\r\n          />\r\n        );\r\n      }\r\n    });\r\n    return body;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Suspense fallback=\"Loading...\">\r\n          <Header></Header>\r\n        \r\n          <Switch>{this.state.body}</Switch>\r\n        </Suspense>\r\n      </HashRouter>)\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AuthenticationActionCreators } from './_actions';\r\nimport { getStore, setStore } from './_utils';\r\nimport { RouteBody } from \"./_routes/app-routes\";\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.profile);\r\n    const user = getStore('user');\r\n    if (user) {\r\n      this.props.dispatch(AuthenticationActionCreators.login(user));\r\n      console.log(\"UserProfile\",this.props.profile);\r\n    }\r\n    fetch(\"https://api.ipify.org/?format=json\")\r\n      .then(response => response.json())\r\n      .then(data => setStore('ip', { address: data.ip}));\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n          <RouteBody></RouteBody>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.user.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './_store';\r\nimport App from './App';\r\nimport './index.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('app-root')\r\n);\r\n\r\n","/**\r\n * Set localStorage\r\n */\r\nexport const setStore = (name, content) => {\r\n  if (!name) return\r\n  if (typeof content !== 'string') {\r\n    content = JSON.stringify(content)\r\n  }\r\n  return window.localStorage.setItem(name, content)\r\n}\r\n\r\n/**\r\n  * Get localStorage\r\n*/\r\nexport const getStore = (name) => {\r\n  if (!name) return\r\n  return JSON.parse(window.localStorage.getItem(name))\r\n}\r\n\r\n/**\r\n * Clear localStorage\r\n*/\r\nexport const removeItem = (name) => {\r\n  if (!name) window.localStorage.clear();\r\n  return window.localStorage.removeItem(name)\r\n}\r\n\r\n","const AuthenticationTypes = {\r\n  LOGIN: 'LOGIN',\r\n  ADD_USER: 'ADD_USER',\r\n  UPDATE_USER: 'UPDATE_USER',\r\n  UPDATE_PROFILE_PICTURE: 'UPDATE_PROFILE_PICTURE',\r\n  FORM_SUBMITION_STATUS: 'FORM_SUBMITION_STATUS',\r\n  REGISTER_INFO: 'FORM_SUBMITION_STATUS'\r\n}\r\n\r\nexport default AuthenticationTypes;","import AuthenticationTypes from './authenticationTypes';\r\n\r\nconst AuthenticationActionCreators = {\r\n\r\n  registrationInfo: (user) => ({ type: AuthenticationTypes.REGISTER_INFO, payload: {user}}),\r\n\r\n  addProfile: (user) => ({ type: AuthenticationTypes.ADD_USER, payload: { user } }),\r\n\r\n  updateProfileImage: (image) => ({ type: AuthenticationTypes.UPDATE_PROFILE_PICTURE, payload: { image } }),\r\n\r\n  updateProfile: (user) => ({ type: AuthenticationTypes.UPDATE_USER, payload: { user } }),\r\n\r\n  formSubmittionStatus: (status) => ({ type: AuthenticationTypes.FORM_SUBMITION_STATUS, payload: { status }}),\r\n\r\n  login: (user) => ({ type: AuthenticationTypes.LOGIN, payload: { user } })\r\n\r\n}\r\n\r\nexport default AuthenticationActionCreators;","import {\r\n    ApolloClient,\r\n    InMemoryCache,\r\n    gql,\r\n    createHttpLink\r\n  } from \"@apollo/client\";\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { LIFERAY_ID, LIFERAY_SECRET_CLIENT } from '../../_constants/constants';\r\nimport { getStore } from '../../_utils';\r\n\r\nexport const GQL = gql;\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: 'http://18.222.211.166:8080/o/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const userToken = localStorage.getItem('user') === undefined || localStorage.getItem('user') === null ? \"\" : JSON.parse(localStorage.getItem('user')).access_token;\r\n  // return the headers to the context so httpLink can read them\r\n  if(userToken !== \"\") {\r\n    return {\r\n      headers: {\r\n        ...headers,\r\n        Authorization: userToken ? `Bearer ${userToken}` : \"\",\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      headers: {\r\n        ...headers\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\n\r\nexport const AClient = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache({\r\n    addTypename: false\r\n  }),\r\n  awaitRefetchQueries : true\r\n});\r\nconsole.log(AClient);\r\nexport const AClientHeaders = {\r\n    liferayClientId: LIFERAY_ID,\r\n    liferayClientSecret: LIFERAY_SECRET_CLIENT\r\n}\r\n\r\n","export const URL = \"http://18.222.211.166:8080\";\r\nexport const LOGO = \"/assets/logo.png\";\r\nexport const LIFERAY_ID = \"id-d0507e10-cb80-e41f-48bf-219a841deac8\";\r\nexport const LIFERAY_SECRET_CLIENT = \"secret-32f818d7-ccba-68fe-92be-5ab913e1e6\";\r\n\r\n\r\nexport const ARTICLES = {\r\n    HEADER_PHONE_INFO: 'login-header-phone',\r\n    LOGIN_FORM_REG_INFO: 'login-form-reg-info',\r\n    CHANGE_PASSWORD_TOP_INFO: 'change-password-top-info',\r\n    CHANGE_PASSWORD_BOTTOM_INFO: 'change-password-bottom-info',\r\n    PRODUCT_DISCLAIMER: 'payment-center-landing-asterisk-content',\r\n    PRODUCTS_NO_RADIO: \"pay-now-no-radio-button-selected-tool-tip-content\",\r\n    PRODUCTS_AUTO_TOOLTIP: \"pay-now-auto-pay-tool-tip-content\",\r\n    REG_ACCOUNT_DETAILS_NOTE: 'registration-step-1-content',\r\n    FORGOT_PASSWORD_INFO: 'reset-password-form-content',\r\n    FORGOT_USERNAME_FORM_INFO: 'forgot-username-form-content',\r\n    CONFIRM_DELETE_PAYMENT_METHOD: 'delete-payment-method-confirm-body',\r\n    REMOVE_AUTOPAY_CONFIRM: 'remove-autopay-confirm',\r\n    CERTI_NUM_INFO: 'certificate-num-info',\r\n    PRODUCT_DISCLAIMER_COMBINED_BILLING: 'product-disclaimer-combinedbilling',\r\n    PRODUCT_DISCLAIMER_NOCOST: 'product-disclaimer-nocost',\r\n    CONTACT_US: 'contact-us',\r\n    ABOUT_US: 'about-us',\r\n    PRODUCT_DETAILS_BENEFITS: 'product-details-benefits',\r\n    PRODUCT_DETAILS_MISMATCH_DATA: 'product-details-mismatch-info',\r\n    TERMS_OF_SERVICE: 'terms-of-service',\r\n    PRIVACY_POLICY: 'privacy-policy',\r\n    UPDATE_FREQUENCY_DISCLAIMER: 'update-frequency-disclaimer'\r\n};\r\n\r\nexport const NOTIFICATIONS = {\r\n    PLAN_NUM_NUMERIC: 'Plan Number should be numeric.',\r\n    PLAN_NUM_10_LEN: 'Plan Number should be of 10 digits.',\r\n    INVALID_EMAIL_FORMAT: 'The email address you have entered is not valid.',\r\n    PLAN_NUMBER_NOT_FOUND: 'Please provide a valid plan number.',\r\n    BOT_SUSPECTED: 'You behaviour verfied as a bot. Please refresh the page to try again.',\r\n    INVALID_PHONE: 'Phone number should be of 10 digits.',\r\n    INVALID_LOCATION: 'The values for State, City and Zip Code is invalid. Please try again.',\r\n    CONTACT_UPDATE_SUCCESS: 'Contact info updated successfully.',\r\n    CONTACT_UPDATE_FAILURE: 'Contact info update failed. Please try again.',\r\n    INVALID_CARD_NUMBER: 'Please provide a valid card number.',\r\n    ACCOUNT_NUM_NOT_MATCH: 'Account number and confirm account number is not matching',\r\n    ROUTE_NUM_NOT_MATCH: 'Routing  number and confirm Routing  number is not matching',\r\n    CONNECTIVITY_ERROR: 'No response from server. Please try again.',\r\n    NO_SELECTED_PRODUCT: 'Product not found. Please select a product to make the payment.'\r\n};\r\n\r\nexport const NOTIFICATIONS_TYPE = {\r\n    SUCCESS: 'successAlert',\r\n    FAILURE: 'warningAlert',\r\n    INFO: 'infoAlert'\r\n}\r\n\r\nexport const CARDS_TYPE = [\r\n    { id: \"VS\", name: 'VISA' },\r\n    { id: \"MC\", name: 'MasterCard' },\r\n    { id: \"DS\", name: 'Discovery' },\r\n    { id: \"AM\", name: 'Amex' },\r\n];\r\n\r\nexport const MONTHS = [\r\n    { id: '01', name: 'Jan' },\r\n    { id: '02', name: 'Feb' },\r\n    { id: '03', name: 'Mar' },\r\n    { id: '04', name: 'Apr' },\r\n    { id: '05', name: 'May' },\r\n    { id: '06', name: 'Jun' },\r\n    { id: '07', name: 'Jul' },\r\n    { id: '08', name: 'Aug' },\r\n    { id: '09', name: 'Sep' },\r\n    { id: '10', name: 'Oct' },\r\n    { id: '11', name: 'Nov' },\r\n    { id: '12', name: 'Dec' },\r\n]\r\n"],"sourceRoot":""}